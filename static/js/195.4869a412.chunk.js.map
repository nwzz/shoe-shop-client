{"version":3,"file":"static/js/195.4869a412.chunk.js","mappings":"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","sources":["components/ButtonPassword.js","hooks/context.js","hooks/useData.js","helper/axios-utils.js","hooks/dataApi.js","modHome/landing/ForgotPassword.js","components/Modal.js","modHome/landing/components/Signup.js","modHome/landing/components/Header.js","modHome/landing/components/Layout.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { FaEye, FaRegEyeSlash } from \"react-icons/fa\";\r\n\r\nconst ButtonPassword = ({ control }) => {\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  // Password toggle handler\r\n  const togglePassword = () => {\r\n    // When the handler is invoked\r\n    // inverse the boolean state of passwordShown\r\n    setPasswordShown(!passwordShown);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-between form-control bg-white \">\r\n      <Controller\r\n        control={control}\r\n        name=\"password\"\r\n        render={({ field }) => (\r\n          <input\r\n            {...field}\r\n            placeholder=\"পাসওয়ার্ড\"\r\n            type={passwordShown ? \"text\" : \"password\"}\r\n            className=\"border-0 p-0 outline-none flex-grow\"\r\n          />\r\n        )}\r\n      />\r\n      {passwordShown ? (\r\n        <FaRegEyeSlash onClick={togglePassword} size={24} />\r\n      ) : (\r\n        <FaEye onClick={togglePassword} size={24} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonPassword;\r\n","import React, { createContext, useContext } from \"react\";\r\nimport useData from \"./useData\";\r\n\r\nconst AppContext = createContext(null);\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const data = useData();\r\n  return <AppContext.Provider value={data}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider };\r\n","import createPersistedState from \"use-persisted-state\";\r\nconst useAuthState = createPersistedState(\"auth\");\r\n\r\nconst useData = () => {\r\n  const [user, setUser] = useAuthState(null);\r\n\r\n  const signOut = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    signOut,\r\n  };\r\n};\r\n\r\nexport default useData;\r\n","import axios from \"axios\";\r\n\r\nconst client = axios.create({ baseURL: process.env.REACT_APP_API_URL });\r\n\r\nexport const request = async ({ ...options }) => {\r\n  const res = await client(options);\r\n  return res;\r\n};\r\n","import { request } from \"../helper/axios-utils\";\r\nimport { useQuery, useMutation } from \"react-query\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nexport const usePostData = () => {\r\n  const value = useGlobalContext();\r\n  return useMutation(({ path, formData }) =>\r\n    request({\r\n      method: \"POST\",\r\n      url: path,\r\n      data: formData,\r\n      headers: {\r\n        Authorization: \"Bearer \" + value.user,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const usePutData = () => {\r\n  const value = useGlobalContext();\r\n  return useMutation(({ path, formData }) =>\r\n    request({\r\n      method: \"PUT\",\r\n      url: path,\r\n      data: formData,\r\n      headers: {\r\n        Authorization: \"Bearer \" + value.user,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const useGetData = (key, path) => {\r\n  const value = useGlobalContext();\r\n  const { status, data, error, isLoading, isError, refetch } = useQuery(\r\n    [\r\n      key,\r\n      {\r\n        path: path,\r\n        headers: {\r\n          Authorization: \"Bearer \" + value.user,\r\n        },\r\n      },\r\n    ],\r\n    ({ queryKey }) => {\r\n      const { path, headers } = queryKey[1];\r\n      return request({\r\n        method: \"GET\",\r\n        url: path,\r\n        headers: headers,\r\n      });\r\n    }\r\n  );\r\n  return { status, data, error, isLoading, isError, refetch };\r\n};\r\n\r\nexport const useDeleteData = () => {\r\n  const value = useGlobalContext();\r\n  return useMutation(({ path }) =>\r\n    request({\r\n      method: \"DELETE\",\r\n      url: path,\r\n      headers: {\r\n        Authorization: \"Bearer \" + value.user,\r\n      },\r\n    })\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { usePostData } from \"../../hooks/dataApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nconst schema = yup.object({\r\n  phoneNumber: yup.string().max(20).required(\"প্রয়োজন\"),\r\n});\r\n\r\nexport default function ForgotPassword() {\r\n  const navigate = useNavigate();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const { mutateAsync } = usePostData();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      // phoneNumber: \"8801765263343\",\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = async (formData) => {\r\n    setSubmitting(true);\r\n    try {\r\n      const { status, data } = await mutateAsync({\r\n        path: \"/auth/forgetpassword\",\r\n        formData: formData,\r\n      });\r\n      if (status === 200 && data.isSuccess === true) {\r\n        // action();\r\n        reset();\r\n        navigate(\"/reset-password/\" + data.accessToken);\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (exception) {\r\n      if (exception.config && exception.config.url) {\r\n        // network error\r\n        toast.error(exception.message);\r\n      } else {\r\n        // other errors\r\n        const msg = exception.response.data;\r\n        msg.status === 400 && toast.error(msg.title);\r\n      }\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container mx-auto flex flex-col md:flex-row items-center text-white\">\r\n        <div className=\"flex flex-col w-full lg:w-1/2 justify-center items-start py-10 px-6\">\r\n          <p className=\"uppercase tracking-loose\">হাতের মধ্যে বাড়ির হিসাব</p>\r\n          <h1 className=\"font-bold text-4xl my-4\">পাসওয়ার্ড ভুলে গেছেন?</h1>\r\n          <p className=\"leading-normal mb-4 text-md\">\r\n            দুটি ধাপে দ্রুত পাসওয়ার্ড রিসেট করুন\r\n          </p>\r\n          <div className=\"w-full lg:w-2/3\">\r\n            <div className=\"mt-0 text-white\">\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"দেশের কোড সহ ফোন নম্বর, উদাহরণ: ৮৮০১৭৭৭২০৩৬১৮ \"\r\n                    {...register(\"phoneNumber\")}\r\n                  />\r\n                  {errors.phoneNumber && (\r\n                    <div className=\"text-danger\">\r\n                      {errors.phoneNumber.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <button\r\n                    className=\"w-full btn-orange\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    পাসওয়ার্ড রিসেট\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"grid place-content-center mt-2\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"px-4 py-2 text-white rounded-lg hover:text-orange tracking-wider cursor-pointer font-semibold text-sm\"\r\n              >\r\n                শুরুতে\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full lg:w-1/2 lg:py-6 text-center\">\r\n          <img\r\n            className=\"object-cover object-center text-gray-900 w-full mx-auto\"\r\n            src=\"/images/forgot.jpg\"\r\n            alt=\"SobHisab\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\n\r\nconst Modal = ({ title, buttonLabel, children }) => {\r\n  let [isOpen, setIsOpen] = useState(false);\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={openModal} className=\"w-24 btn-orange\">\r\n        {buttonLabel}\r\n      </button>\r\n\r\n      <Transition appear show={isOpen} as={Fragment}>\r\n        <Dialog\r\n          as=\"div\"\r\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n          onClose={closeModal}\r\n        >\r\n          <div className=\"min-h-screen px-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Dialog.Overlay className=\"fixed inset-0 bg-gray-900 bg-opacity-70\" />\r\n            </Transition.Child>\r\n\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"inline-block h-screen align-middle\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <div className=\"inline-block w-full max-w-lg p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-lighter shadow-xl rounded-2xl\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                >\r\n                  {title}\r\n                </Dialog.Title>\r\n                {children}\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { usePostData } from \"../../../hooks/dataApi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../../../hooks/context\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport toast from \"react-hot-toast\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport ButtonPassword from \"../../../components/ButtonPassword\";\r\n\r\nconst schema = yup.object().shape({\r\n  fullName: yup.string().max(100).required(\"প্রয়োজন\"),\r\n  phoneNumber: yup.string().max(20).required(\"প্রয়োজন\"),\r\n  password: yup\r\n    .string()\r\n    .max(20)\r\n    .required(\"প্রয়োজন\")\r\n    .min(8, \"পাসওয়ার্ড খুব ছোট, ন্যূনতম ৮ অক্ষর হওয়া উচিত\"),\r\n});\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const value = useGlobalContext();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const { mutateAsync } = usePostData();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      fullName: \"\",\r\n      phoneNumber: \"\",\r\n      password: \"\",\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { fullName, phoneNumber, password } = errors;\r\n\r\n  const onSubmit = async (formData) => {\r\n    setSubmitting(true);\r\n    try {\r\n      const { status, data } = await mutateAsync({\r\n        path: \"/auth/register\",\r\n        formData: formData,\r\n      });\r\n      if (status === 201) {\r\n        toast.success(\"Thanks for signing up.\");\r\n        value.setUser(data.accessToken);\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (exception) {\r\n      if (exception.config && exception.config.url) {\r\n        // network error\r\n        toast.error(exception.message);\r\n      } else {\r\n        // other errors\r\n        const msg = exception.response.data;\r\n        msg.status === 400 && toast.error(msg.title);\r\n      }\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mt-2\">\r\n        <div className=\"px-0 pt-2 pb-0 mb-4 flex flex-col\">\r\n          <div className=\"mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"পূর্ণ নাম\"\r\n              {...register(\"fullName\")}\r\n            />\r\n            {fullName ? (\r\n              <div className=\"text-danger\">{fullName.message}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"দেশের কোড সহ ফোন নম্বর, উদাহরণ: 8801777203618\"\r\n              {...register(\"phoneNumber\")}\r\n            />\r\n\r\n            {phoneNumber ? (\r\n              <div className=\"text-danger\">{phoneNumber.message}</div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <ButtonPassword control={control} />\r\n            {password ? (\r\n              <div className=\"text-danger\">{password.message}</div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"flex flex-col items-center justify-center\">\r\n            <h6 className=\"text-sm text-center mb-2\">\r\n              \"সম্মত হন এবং যোগ দিন\" এ ক্লিক করার মাধ্যমে, আপনি সবহিসাব\r\n              ব্যবহারকারী চুক্তি, গোপনীয়তা নীতি এবং কুকি নীতি মেনে চলতে সম্মত\r\n              হবেন।\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <button\r\n          className=\"btn-orange w-full\"\r\n          type=\"submit\"\r\n          disabled={submitting}\r\n        >\r\n          সম্মত হন এবং যোগ দিন\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../../../components/Modal\";\r\nimport Signup from \"./Signup\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"\">\r\n      <nav className=\"max-w-full px-2 sm:px-8\">\r\n        <div className=\"flex justify-between\">\r\n          <Link to=\"/\" className=\"flex items-center py-2\">\r\n            <img className=\"h-10\" src=\"/images/logo.png\" alt=\"logo\" />\r\n          </Link>\r\n\r\n          <div className=\"flex items-center space-x-1\">\r\n            <Modal\r\n              title=\"অ্যাকাউন্ট তৈরি করুন\"\r\n              buttonLabel=\"সাইন আপ\"\r\n              children={<Signup />}\r\n            />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className=\"bg-primary h-screen w-screen grid grid-cols-1 grid-rows-layout max-w-screen-2xl xl:max-w-screen-3xl mx-auto\">\r\n      <Header />\r\n      <div className=\"grid overflow-hidden grid-cols-1\">\r\n        <div className=\"overflow-y-auto\">\r\n          <section className=\"h-full\">\r\n            <div className=\"max-w-full px-2 sm:px-8 h-full\">{children}</div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["control","useState","passwordShown","setPasswordShown","togglePassword","className","name","render","field","placeholder","type","onClick","size","AppContext","createPersistedState","createContext","useGlobalContext","useContext","client","axios","baseURL","process","REACT_APP_API_URL","request","options","res","usePostData","value","useMutation","path","formData","method","url","data","headers","Authorization","user","schema","yup","phoneNumber","max","required","ForgotPassword","navigate","useNavigate","submitting","setSubmitting","mutateAsync","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","status","isSuccess","accessToken","toast","message","config","msg","response","title","disabled","to","src","alt","buttonLabel","children","isOpen","setIsOpen","appear","show","as","Fragment","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","shape","fullName","password","min","setUser","ButtonPassword"],"sourceRoot":""}